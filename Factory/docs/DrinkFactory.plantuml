@startuml
class IHotDrink{
    + virtual ~HotDrink() = default
    +  virtual void prepare(int volume) = 0
}

class Tea{
    + void prepare(int volume) override
}

class Coffee{
    + void prepare(int volume) override
}

class IHotDrinkFactory{
    + virtual std::shared_ptr<IHotDrink> make() = 0
}

class TeaFactory{
    + std::shared_ptr<IHotDrink> make() override
}

class CoffeeFactory{
    + std::shared_ptr<IHotDrink> make() override
}

class DrinkFactory{
    - std::map<std::string, std::shared_ptr<IHotDrinkFactory>> hot_factories_
    + DrinkFactory()
    + std::optional<std::shared_ptr<IHotDrink>> makeDrink(std::string name)
}

IHotDrink <|--  Tea
IHotDrink <|--  Coffee

IHotDrinkFactory <|--  TeaFactory
IHotDrinkFactory <|--  CoffeeFactory

TeaFactory ..> Tea
CoffeeFactory ..> Coffee

DrinkFactory  o-- IHotDrinkFactory

@enduml